package com.hack23.cia.service.impl.rules.politician

import org.kie.api.runtime.KieRuntime

import com.hack23.cia.model.internal.application.data.politician.impl.ViewRiksdagenPolitician
import com.hack23.cia.model.internal.application.data.rules.impl.Status
import com.hack23.cia.service.impl.rules.PoliticianComplianceCheckImpl

rule "Politician currently active as a speaker"
    dialect "java"
    when
        $p : PoliticianComplianceCheckImpl(politician.activeSpeaker)
    then
        $p.addViolation(Status.MINOR, "PoliticianSpeaker", "Role", kcontext.getRule().getName(), "Active Speaker");
end

rule "Politician served as a speaker for more than 1000 days"
    dialect "java"
    when
        $p : PoliticianComplianceCheckImpl(politician.totalDaysServedSpeaker > 1000)
    then
        $p.addViolation(Status.MINOR, "PoliticianSpeaker", "Experience", kcontext.getRule().getName(), "Experienced Speaker");
end

rule "Politician served as a speaker for more than 2000 days"
    dialect "java"
    when
        $p : PoliticianComplianceCheckImpl(politician.totalDaysServedSpeaker > 2000)
    then
        $p.addViolation(Status.MAJOR, "PoliticianSpeaker", "Experience", kcontext.getRule().getName(), "Highly Experienced Speaker");
end

rule "Politician served as a speaker for more than 3000 days"
    dialect "java"
    when
        $p : PoliticianComplianceCheckImpl(politician.totalDaysServedSpeaker > 3000)
    then
        $p.addViolation(Status.CRITICAL, "PoliticianSpeaker", "Experience", kcontext.getRule().getName(), "Extremely Experienced Speaker");
end

rule "Politician with no days served as a speaker"
    dialect "java"
    when
        $p : PoliticianComplianceCheckImpl(politician.totalDaysServedSpeaker == 0)
    then
        $p.addViolation(Status.NA, "PoliticianSpeaker", "Experience", kcontext.getRule().getName(), "No Experience as Speaker");
end
