//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2019.02.25 at 12:05:09 AM CET
//


package com.hack23.cia.model.internal.application.data.document.impl;



import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;

import com.hack23.cia.model.common.api.ModelObject;


// TODO: Auto-generated Javadoc
/**
 * <p>Java class for ViewRiksdagenPartyDocumentDailySummary complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="ViewRiksdagenPartyDocumentDailySummary"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="embeddedId" type="{http://document.data.application.internal.model.cia.hack23.com/impl}RiksdagenDocumentPartySummaryEmbeddedId"/&gt;
 *         &lt;element name="total" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewRiksdagenPartyDocumentDailySummary", propOrder = {
	    "embeddedId",
	    "total",
	    "partyMotionsTotal",
	    "individualMotionsTotal",
	    "committeeMotionsTotal",
	    "collaborativeMotionsTotal",
	    "followUpMotionsTotal"
	})
@Entity(name = "ViewRiksdagenPartyDocumentDailySummary")
@Table(name = "View_Riksdagen_Party_Document_Daily_Summary")
@Inheritance(strategy = InheritanceType.JOINED)
public class ViewRiksdagenPartyDocumentDailySummary
    implements ModelObject
{

    /** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The embedded id. */
	@XmlElement(required = true)
    protected RiksdagenDocumentPartySummaryEmbeddedId embeddedId;

    /** The total. */
    protected long total;

    /** The committee motions total. */
    protected long committeeMotionsTotal;

    /** The party motions total. */
    protected long partyMotionsTotal;

    /** The individual motions total. */
    protected long individualMotionsTotal;

    /** The collaborative motions total. */
    protected long collaborativeMotionsTotal;

    /** The follow up motions total. */
    protected long followUpMotionsTotal;

    /** The high activity total. */
    protected long highActivityTotal;

    /** The medium activity total. */
    protected long mediumActivityTotal;

    /** The low activity total. */
    protected long lowActivityTotal;

    /** The member signed total. */
    protected long memberSignedTotal;

    /** The party leader signed total. */
    protected long partyLeaderSignedTotal;

    /** The cross party signed total. */
    protected long crossPartySignedTotal;

    /** The main proposal total. */
    protected long mainProposalTotal;

    /** The alternative proposal total. */
    protected long alternativeProposalTotal;

    /**
     * Gets the value of the embeddedId property.
     *
     * @return
     *     possible object is
     *     {@link RiksdagenDocumentPartySummaryEmbeddedId }
     *
     */
    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "publicDate", column = @Column(name = "EMBEDDED_ID_PUBLIC_DATE")),
        @AttributeOverride(name = "partyShortCode", column = @Column(name = "EMBEDDED_ID_PARTY_SHORT_CODE")),
        @AttributeOverride(name = "documentType", column = @Column(name = "EMBEDDED_ID_DOCUMENT_TYPE"))
    })
    public RiksdagenDocumentPartySummaryEmbeddedId getEmbeddedId() {
        return embeddedId;
    }

    /**
     * Sets the value of the embeddedId property.
     *
     * @param value
     *     allowed object is
     *     {@link RiksdagenDocumentPartySummaryEmbeddedId }
     *
     */
    public void setEmbeddedId(final RiksdagenDocumentPartySummaryEmbeddedId value) {
        this.embeddedId = value;
    }

    /**
     * Gets the value of the total property.
     *
     * @return the total
     */
    @Basic
    @Column(name = "TOTAL", precision = 20)
    public long getTotal() {
        return total;
    }

    /**
     * Sets the value of the total property.
     *
     * @param value the new total
     */
    public void setTotal(final long value) {
        this.total = value;
    }

    /**
     * With embedded id.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withEmbeddedId(final RiksdagenDocumentPartySummaryEmbeddedId value) {
        setEmbeddedId(value);
        return this;
    }

    /**
     * With total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withTotal(final long value) {
        setTotal(value);
        return this;
    }

    /**
     * Gets the committee motions total.
     *
     * @return the committee motions total
     */
    @Basic
    @Column(name = "COMMITTEE_MOTIONS_TOTAL", precision = 20)
    public long getCommitteeMotionsTotal() {
        return committeeMotionsTotal;
    }

    /**
     * Sets the committee motions total.
     *
     * @param value the new committee motions total
     */
    public void setCommitteeMotionsTotal(final long value) {
        this.committeeMotionsTotal = value;
    }

    /**
     * Gets the party motions total.
     *
     * @return the party motions total
     */
    @Basic
    @Column(name = "PARTY_MOTIONS_TOTAL", precision = 20)
    public long getPartyMotionsTotal() {
        return partyMotionsTotal;
    }

    /**
     * Sets the party motions total.
     *
     * @param value the new party motions total
     */
    public void setPartyMotionsTotal(final long value) {
        this.partyMotionsTotal = value;
    }

    /**
     * Gets the individual motions total.
     *
     * @return the individual motions total
     */
    @Basic
    @Column(name = "INDIVIDUAL_MOTIONS_TOTAL", precision = 20)
    public long getIndividualMotionsTotal() {
        return individualMotionsTotal;
    }

    /**
     * Sets the individual motions total.
     *
     * @param value the new individual motions total
     */
    public void setIndividualMotionsTotal(final long value) {
        this.individualMotionsTotal = value;
    }

    /**
     * Gets the collaborative motions total.
     *
     * @return the collaborative motions total
     */
    @Basic
    @Column(name = "COLLABORATIVE_MOTIONS_TOTAL", precision = 20)
    public long getCollaborativeMotionsTotal() {
        return collaborativeMotionsTotal;
    }

    /**
     * Sets the collaborative motions total.
     *
     * @param value the new collaborative motions total
     */
    public void setCollaborativeMotionsTotal(final long value) {
        this.collaborativeMotionsTotal = value;
    }

    /**
     * Gets the follow up motions total.
     *
     * @return the follow up motions total
     */
    @Basic
    @Column(name = "FOLLOW_UP_MOTIONS_TOTAL", precision = 20)
    public long getFollowUpMotionsTotal() {
        return followUpMotionsTotal;
    }

    /**
     * Sets the follow up motions total.
     *
     * @param value the new follow up motions total
     */
    public void setFollowUpMotionsTotal(final long value) {
        this.followUpMotionsTotal = value;
    }

    /**
     * Gets the high activity total.
     *
     * @return the high activity total
     */
    @Basic
    @Column(name = "HIGH_ACTIVITY_TOTAL", precision = 20)
    public long getHighActivityTotal() {
        return highActivityTotal;
    }

    /**
     * Sets the high activity total.
     *
     * @param value the new high activity total
     */
    public void setHighActivityTotal(final long value) {
        this.highActivityTotal = value;
    }

    /**
     * Gets the medium activity total.
     *
     * @return the medium activity total
     */
    @Basic
    @Column(name = "MEDIUM_ACTIVITY_TOTAL", precision = 20)
    public long getMediumActivityTotal() {
        return mediumActivityTotal;
    }

    /**
     * Sets the medium activity total.
     *
     * @param value the new medium activity total
     */
    public void setMediumActivityTotal(final long value) {
        this.mediumActivityTotal = value;
    }

    /**
     * Gets the low activity total.
     *
     * @return the low activity total
     */
    @Basic
    @Column(name = "LOW_ACTIVITY_TOTAL", precision = 20)
    public long getLowActivityTotal() {
        return lowActivityTotal;
    }

    /**
     * Sets the low activity total.
     *
     * @param value the new low activity total
     */
    public void setLowActivityTotal(final long value) {
        this.lowActivityTotal = value;
    }

    /**
     * Gets the member signed total.
     *
     * @return the member signed total
     */
    @Basic
    @Column(name = "MEMBER_SIGNED_TOTAL", precision = 20)
    public long getMemberSignedTotal() {
        return memberSignedTotal;
    }

    /**
     * Sets the member signed total.
     *
     * @param value the new member signed total
     */
    public void setMemberSignedTotal(final long value) {
        this.memberSignedTotal = value;
    }

    /**
     * Gets the party leader signed total.
     *
     * @return the party leader signed total
     */
    @Basic
    @Column(name = "PARTY_LEADER_SIGNED_TOTAL", precision = 20)
    public long getPartyLeaderSignedTotal() {
        return partyLeaderSignedTotal;
    }

    /**
     * Sets the party leader signed total.
     *
     * @param value the new party leader signed total
     */
    public void setPartyLeaderSignedTotal(final long value) {
        this.partyLeaderSignedTotal = value;
    }

    /**
     * Gets the cross party signed total.
     *
     * @return the cross party signed total
     */
    @Basic
    @Column(name = "CROSS_PARTY_SIGNED_TOTAL", precision = 20)
    public long getCrossPartySignedTotal() {
        return crossPartySignedTotal;
    }

    /**
     * Sets the cross party signed total.
     *
     * @param value the new cross party signed total
     */
    public void setCrossPartySignedTotal(final long value) {
        this.crossPartySignedTotal = value;
    }

    /**
     * Gets the main proposal total.
     *
     * @return the main proposal total
     */
    @Basic
    @Column(name = "MAIN_PROPOSAL_TOTAL", precision = 20)
    public long getMainProposalTotal() {
        return mainProposalTotal;
    }

    /**
     * Sets the main proposal total.
     *
     * @param value the new main proposal total
     */
    public void setMainProposalTotal(final long value) {
        this.mainProposalTotal = value;
    }

    /**
     * Gets the alternative proposal total.
     *
     * @return the alternative proposal total
     */
    @Basic
    @Column(name = "ALTERNATIVE_PROPOSAL_TOTAL", precision = 20)
    public long getAlternativeProposalTotal() {
        return alternativeProposalTotal;
    }

    /**
     * Sets the alternative proposal total.
     *
     * @param value the new alternative proposal total
     */
    public void setAlternativeProposalTotal(final long value) {
        this.alternativeProposalTotal = value;
    }

    /**
     * With committee motions total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    // Builder pattern methods
    public ViewRiksdagenPartyDocumentDailySummary withCommitteeMotionsTotal(final long value) {
        setCommitteeMotionsTotal(value);
        return this;
    }

    /**
     * With party motions total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withPartyMotionsTotal(final long value) {
        setPartyMotionsTotal(value);
        return this;
    }

    /**
     * With individual motions total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withIndividualMotionsTotal(final long value) {
        setIndividualMotionsTotal(value);
        return this;
    }

    /**
     * With collaborative motions total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withCollaborativeMotionsTotal(final long value) {
        setCollaborativeMotionsTotal(value);
        return this;
    }

    /**
     * With follow up motions total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withFollowUpMotionsTotal(final long value) {
        setFollowUpMotionsTotal(value);
        return this;
    }

    /**
     * With high activity total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withHighActivityTotal(final long value) {
        setHighActivityTotal(value);
        return this;
    }

    /**
     * With medium activity total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withMediumActivityTotal(final long value) {
        setMediumActivityTotal(value);
        return this;
    }

    /**
     * With low activity total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withLowActivityTotal(final long value) {
        setLowActivityTotal(value);
        return this;
    }

    /**
     * With member signed total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withMemberSignedTotal(final long value) {
        setMemberSignedTotal(value);
        return this;
    }

    /**
     * With party leader signed total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withPartyLeaderSignedTotal(final long value) {
        setPartyLeaderSignedTotal(value);
        return this;
    }

    /**
     * With cross party signed total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withCrossPartySignedTotal(final long value) {
        setCrossPartySignedTotal(value);
        return this;
    }

    /**
     * With main proposal total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withMainProposalTotal(final long value) {
        setMainProposalTotal(value);
        return this;
    }

    /**
     * With alternative proposal total.
     *
     * @param value the value
     * @return the view riksdagen party document daily summary
     */
    public ViewRiksdagenPartyDocumentDailySummary withAlternativeProposalTotal(final long value) {
        setAlternativeProposalTotal(value);
        return this;
    }

	/**
	 * To string.
	 *
	 * @return the string
	 */
	@Override
	public final String toString() {
		return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
	}


	/**
	 * Equals.
	 *
	 * @param obj the obj
	 * @return true, if successful
	 */
	@Override
	public final boolean equals(final Object obj) {
		return EqualsBuilder.reflectionEquals(this, obj);
	}

	/**
	 * Hash code.
	 *
	 * @return the int
	 */
	@Override
	public final int hashCode() {
		return HashCodeBuilder.reflectionHashCode(this);
	}

}
