<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">


	<changeSet author="party_trends" id="2414872417007-324"
		failOnError="true">
		
		<dropView viewName="view_riksdagen_party_ballot_support_annual_summary" /> <createView
			viewName="view_riksdagen_party_ballot_support_annual_summary">SELECT to_char(date_trunc('month',p1.vote_date),'YYYY-MM-DD') as embedded_id_date, p1.embedded_id_party as embedded_id_party, p2.embedded_id_party as embedded_id_other_party, sum( case when p1.party_approved = p2.party_approved then 1 else 0 end) as agree_count, sum( case when p1.party_approved = p2.party_approved then 0 else 1 end) as disagre_count, (sum( case when p1.party_approved = p2.party_approved then 0 else 1 end) *100 )/ count(*) as disagree_percentage,  count(*) as total_ballots
																		FROM view_riksdagen_vote_data_ballot_party_summary p1
																		JOIN view_riksdagen_vote_data_ballot_party_summary p2 ON p1.embedded_id_party &lt;&gt; p2.embedded_id_party and p1.embedded_id_ballot_id = p2.embedded_id_ballot_id and p1.embedded_id_issue = p2.embedded_id_issue group by p1.embedded_id_party,p2.embedded_id_party,to_char(date_trunc('month',p1.vote_date),'YYYY-MM-DD')</createView>
	</changeSet>

	<changeSet author="pether" id="2414872417007-325">

		<dropView viewName="view_riksdagen_party_role_member" /> <createView
			viewName="view_riksdagen_party_role_member">select hjid as role_id,detail, role_code,first_name,last_name,from_date,to_date,person_data.id as person_id,person_data.party as party,(CASE WHEN to_date > CURRENT_DATE or to_date is null THEN CURRENT_DATE ELSE to_date END) - (CASE WHEN from_date > CURRENT_DATE THEN CURRENT_DATE ELSE from_date END) as total_days_served,(CASE WHEN to_date is null or to_date > CURRENT_DATE and from_date &lt; CURRENT_DATE THEN true ELSE false END) as active from assignment_data left join person_data on assignment_data.intressent_id = person_data.id where assignment_type='partiuppdrag'</createView>

	</changeSet>

	<changeSet author="pether" id="2414872417007-326">

		<createTable tableName="rule_violation">
			<column name="id" type="INT8">
				<constraints nullable="false" />
			</column>
			<column name="detected_date" type="TIMESTAMP WITHOUT TIME ZONE" />			
			<column name="reference_id" type="VARCHAR(255)" />
			<column name="name" type="VARCHAR(255)" />
			<column name="resource_type" type="VARCHAR(255)" />
			<column name="rule_description" type="VARCHAR(255)" />
			<column name="rule_group" type="VARCHAR(255)" />
			<column name="status" type="VARCHAR(255)" />
			<column name="positive" type="VARCHAR(255)" />									
		</createTable>
	</changeSet>

	<changeSet author="pether" id="2414872417007-327">
		<addColumn tableName="rule_violation">
			<column name="rule_name" type="varchar(255)" />
		</addColumn>
	</changeSet>
	
	<changeSet author="pether (generated)" id="2414872417007-328">
		<addPrimaryKey columnNames="hjid"
			constraintName="application_configuration_pkey" tableName="application_configuration" />
	</changeSet>
	
	<changeSet author="pether (generated)" id="1414872417007-329">
	
		<sql>DROP MATERIALIZED VIEW view_worldbank_indicator_data_country_summary</sql>
	
		<modifyDataType columnName="indicator_name" newDataType="VARCHAR(2048)"
			tableName="indicator_element" />
		<modifyDataType columnName="source_id" newDataType="VARCHAR(2048)"
			tableName="indicator_element" />
		<modifyDataType columnName="source_value" newDataType="VARCHAR(2048)"
			tableName="indicator_element" />
		<sql>create materialized view view_worldbank_indicator_data_country_summary as select indicator_id as embedded_id_indicator_id,country_id as embedded_id_country_id,max(indicator_name) as indicator_name,max(source_id) as source_id,max(source_value) as source_value,max(source_note) as source_note,max(source_organization) as source_organization,min(year_date) as start_year, max(year_date) as end_year,count(*) as data_point,max(topics::text) as topics from world_bank_data  left join (select * from indicator_element   inner join (select topic_topics_hjid,string_agg(distinct value_,';') as topics,count(*) as number_of_topics from topic group by topic_topics_hjid) AS derivedTable  on indicator_element.topics_indicator_element_hjid=derivedTable.topic_topics_hjid) as indicators on indicator_id = indicators.id where data_value!='' and data_value!='0' and year_date is not null and source_organization is not null and source_organization !='' group by indicator_id,country_id</sql>

	</changeSet>
	

	<changeSet author="pether (generated)" id="1414872417007-330">
		
		<createIndex indexName="application_action_event_created_date_idx" tableName="application_action_event">
            <column name="created_date"/>
        </createIndex>
	
		<createIndex indexName="application_action_event_sessionid_idx" tableName="application_action_event">
            <column name="session_id"/>
        </createIndex>

		<createIndex indexName="application_action_event_element_idx" tableName="application_action_event">
            <column name="element_id"/>
        </createIndex>

		<createIndex indexName="application_session_ip_idx" tableName="application_session">
            <column name="ip_information"/>
        </createIndex>

		<createIndex indexName="application_session_created_date_idx" tableName="application_session">
            <column name="created_date"/>
        </createIndex>
	</changeSet>

	<changeSet author="pether (generated)" id="1414872417007-331" failOnError="false">
		<sql>CREATE EXTENSION vector</sql>
	</changeSet>
	
	


    <changeSet author="pether " id="extend-view-riksdagen-politician-20231002" failOnError="true">


       <dropView viewName="view_riksdagen_party" />
	   <dropView viewName="view_riksdagen_party_summary" />
	   <dropView viewName="view_riksdagen_politician" />
	   <dropView viewName="view_riksdagen_party_member" />

    <createView viewName="view_riksdagen_party_member">
        <![CDATA[
        SELECT *
        FROM sweden_political_party sp
        JOIN person_data p
            ON p.party = sp.short_code
        ]]>
    </createView>

   <createView viewName="view_riksdagen_party">
        <![CDATA[
        SELECT
            party_id                AS party_number,
            party_name,
            short_code              AS party_id,
            website,
            registered_date,
            COUNT(DISTINCT id)      AS head_count
        FROM view_riksdagen_party_member
        GROUP BY
            party_id,
            party_name,
            short_code,
            website,
            registered_date
        ORDER BY short_code
        ]]>
    </createView>
        
     <createView viewName="view_riksdagen_politician">
        <![CDATA[
        SELECT
            view_riksdagen_party_member.id AS person_id,
            max(first_name) AS first_name,
            max(last_name) AS last_name,
            max(party) AS party,
            max(born_year) AS born_year,
            max(gender) AS gender,
            COALESCE(min(assignment_data.from_date), CURRENT_DATE) AS first_assignment_date,
            COALESCE(max(assignment_data.to_date), CURRENT_DATE) AS last_assignment_date,
            sum(CASE
                    WHEN assignment_data.status LIKE 'Ledig%'
                         THEN 0
                    ELSE
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                END
            ) AS total_days_served,
            sum(
                CASE
                    WHEN (assignment_type='kammaruppdrag'
                          AND assignment_data.status NOT LIKE 'Ledig%')
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date > CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_parliament,
            sum(
                CASE
                    WHEN (org_code IS NOT NULL
                          AND assignment_type='uppdrag')
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_committee,
            sum(
                CASE
                    WHEN (role_code LIKE '%MINISTER'
                          OR detail LIKE '%departementet'
                          OR detail = 'Statsrådsberedningen')
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_government,
            sum(
                CASE
                    WHEN (detail = 'Europaparlamentet')
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_eu,
            (CASE
                 WHEN max(to_date) >= CURRENT_DATE THEN true
                 ELSE false
             END) AS active,
            count(*) AS total_assignments,
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND assignment_data.from_date <= CURRENT_DATE)
                    THEN 1
                    ELSE 0
                END
            ) AS current_assignments,
            sum(
                CASE
                    WHEN assignment_type='talmansuppdrag'
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_speaker,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND assignment_type='talmansuppdrag')
                            THEN 1
                            ELSE 0
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_speaker,
            sum(
                CASE
                    WHEN assignment_type='partiuppdrag'
                    THEN
                        (
                            CASE
                                WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE COALESCE(to_date, CURRENT_DATE)
                            END
                            -
                            CASE
                                WHEN from_date >= CURRENT_DATE
                                    THEN CURRENT_DATE
                                ELSE from_date
                            END
                        )
                    ELSE 0
                END
            ) AS total_days_served_party,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND assignment_type='partiuppdrag')
                            THEN 1
                            ELSE 0
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_party,
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND org_code IS NOT NULL
                          AND assignment_type='uppdrag')
                    THEN 1
                    ELSE 0
                END
            ) AS current_committee_assignments,
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND (role_code LIKE '%MINISTER'
                               OR detail LIKE '%departementet'
                               OR detail='Statsrådsberedningen'))
                    THEN 1
                    ELSE 0
                END
            ) AS current_ministry_assignments,
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND assignment_type='partiuppdrag')
                    THEN 1
                    ELSE 0
                END
            ) AS current_party_assignments,
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND assignment_type='talmansuppdrag')
                    THEN 1
                    ELSE 0
                END
            ) AS current_speaker_assignments,
            sum(
                CASE
                    WHEN (org_code IS NOT NULL AND assignment_type='uppdrag')
                    THEN 1
                    ELSE 0
                END
            ) AS total_committee_assignments,
            sum(
                CASE
                    WHEN assignment_type='partiuppdrag'
                    THEN 1
                    ELSE 0
                END
            ) AS total_party_assignments,
            sum(
                CASE
                    WHEN assignment_type='talmansuppdrag'
                    THEN 1
                    ELSE 0
                END
            ) AS total_speaker_assignments,
            sum(
                CASE
                    WHEN (role_code LIKE '%MINISTER'
                          OR detail LIKE '%departementet'
                          OR detail='Statsrådsberedningen')
                    THEN 1
                    ELSE 0
                END
            ) AS total_ministry_assignments,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND detail='Europaparlamentet')
                            THEN 1
                            ELSE 0
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_eu,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND (role_code LIKE '%MINISTER'
                                       OR detail LIKE '%departementet'
                                       OR detail='Statsrådsberedningen'))
                            THEN 1
                            ELSE 0
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_government,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND org_code IS NOT NULL
                                  AND assignment_type='uppdrag')
                            THEN 1
                            ELSE 0
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_committee,
            CASE
                WHEN (
                    sum(
                        CASE
                            WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                  AND from_date <= CURRENT_DATE
                                  AND assignment_type='kammaruppdrag'
                                  AND assignment_data.status NOT LIKE 'Ledig%')
                            THEN 1
                            ELSE
                                CASE
                                    WHEN (
                                        COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                        AND from_date <= CURRENT_DATE
                                        AND assignment_type='kammaruppdrag'
                                        AND assignment_data.status LIKE 'Ledig%'
                                    )
                                    THEN 0
                                    ELSE 0
                                END
                        END
                    ) > 0
                ) THEN true
                ELSE false
            END AS active_parliament,

            -- NEW: totalCommitteeSubstituteAssignments
            sum(
                CASE
                    WHEN (org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%suppleant%'
                               OR role_code ILIKE '%ersättare%'))
                    THEN 1
                    ELSE 0
                END
            ) AS total_committee_substitute_assignments,

            -- NEW: currentCommitteeSubstituteAssignments
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%suppleant%'
                               OR role_code ILIKE '%ersättare%'))
                    THEN 1
                    ELSE 0
                END
            ) AS current_committee_substitute_assignments,

            -- NEW: totalDaysServedCommitteeSubstitute
            sum(
                CASE
                    WHEN (org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%suppleant%'
                               OR role_code ILIKE '%ersättare%'))
                    THEN (
                        (CASE
                            WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                THEN CURRENT_DATE
                            ELSE COALESCE(to_date, CURRENT_DATE)
                         END)
                         -
                        (CASE
                            WHEN from_date >= CURRENT_DATE
                                THEN CURRENT_DATE
                            ELSE from_date
                         END)
                    )
                    ELSE 0
                END
            ) AS total_days_served_committee_substitute,

            -- NEW: totalCommitteeLeadershipAssignments
            sum(
                CASE
                    WHEN (org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%ordförande%'
                               OR role_code ILIKE '%vice ordförande%'))
                    THEN 1
                    ELSE 0
                END
            ) AS total_committee_leadership_assignments,

            -- NEW: currentCommitteeLeadershipAssignments
            sum(
                CASE
                    WHEN (COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                          AND from_date <= CURRENT_DATE
                          AND org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%ordförande%'
                               OR role_code ILIKE '%vice ordförande%'))
                    THEN 1
                    ELSE 0
                END
            ) AS current_committee_leadership_assignments,

            -- NEW: totalDaysServedCommitteeLeadership
            sum(
                CASE
                    WHEN (org_code IS NOT NULL
                          AND assignment_type='uppdrag'
                          AND (role_code ILIKE '%ordförande%'
                               OR role_code ILIKE '%vice ordförande%'))
                    THEN (
                        (CASE
                            WHEN COALESCE(to_date, CURRENT_DATE) >= CURRENT_DATE
                                THEN CURRENT_DATE
                            ELSE COALESCE(to_date, CURRENT_DATE)
                         END)
                         -
                        (CASE
                            WHEN from_date >= CURRENT_DATE
                                THEN CURRENT_DATE
                            ELSE from_date
                         END)
                    )
                    ELSE 0
                END
            ) AS total_days_served_committee_leadership

        FROM assignment_data
        LEFT JOIN view_riksdagen_party_member
               ON assignment_data.intressent_id = view_riksdagen_party_member.id
        GROUP BY view_riksdagen_party_member.id
        ]]>
    </createView>
    
    <createView viewName="view_riksdagen_party_summary">
        <![CDATA[
        SELECT
            party,
            min(first_assignment_date) AS first_assignment_date,
            max(last_assignment_date) AS last_assignment_date,
            sum(total_days_served::int8)::int8 AS total_days_served,
            sum(total_days_served_parliament::int8)::int8 AS total_days_served_parliament,
            sum(total_days_served_committee::int8)::int8 AS total_days_served_committee,
            sum(total_days_served_government::int8)::int8 AS total_days_served_government,
            sum(total_days_served_eu::int8)::int8 AS total_days_served_eu,
            sum(total_days_served_speaker::int8)::int8 AS total_days_served_speaker,
            sum(total_days_served_party::int8)::int8 AS total_days_served_party,

            bool_or(active) AS active,
            bool_or(active_eu) AS active_eu,
            bool_or(active_government) AS active_government,
            bool_or(active_committee) AS active_committee,
            bool_or(active_parliament) AS active_parliament,
            bool_or(active_speaker) AS active_speaker,
            bool_or(active_party) AS active_party,

            sum(CASE WHEN active THEN 1 ELSE 0 END) AS total_active,
            sum(CASE WHEN active_eu THEN 1 ELSE 0 END) AS total_active_eu,
            sum(CASE WHEN active_government THEN 1 ELSE 0 END) AS total_active_government,
            sum(CASE WHEN active_committee THEN 1 ELSE 0 END) AS total_active_committee,
            sum(CASE WHEN active_parliament THEN 1 ELSE 0 END) AS total_active_parliament,

            sum(total_assignments::int8)::int8 AS total_assignments,
            sum(total_party_assignments::int8)::int8 AS total_party_assignments,
            sum(total_committee_assignments::int8)::int8 AS total_committee_assignments,
            sum(total_ministry_assignments::int8)::int8 AS total_ministry_assignments,
            sum(total_speaker_assignments::int8)::int8 AS total_speaker_assignments,
            sum(current_assignments::int8)::int8 AS current_assignments,
            sum(current_party_assignments::int8)::int8 AS current_party_assignments,
            sum(current_committee_assignments::int8)::int8 AS current_committee_assignments,
            sum(current_ministry_assignments::int8)::int8 AS current_ministry_assignments,
            sum(current_speaker_assignments::int8)::int8 AS current_speaker_assignments,

            -- NEW FIELDS FOR COMMITTEE SUBSTITUTE
            sum(total_committee_substitute_assignments::int8)::int8 AS total_committee_substitute_assignments,
            sum(current_committee_substitute_assignments::int8)::int8 AS current_committee_substitute_assignments,
            sum(total_days_served_committee_substitute::int8)::int8 AS total_days_served_committee_substitute,

            -- NEW FIELDS FOR COMMITTEE LEADERSHIP
            sum(total_committee_leadership_assignments::int8)::int8 AS total_committee_leadership_assignments,
            sum(current_committee_leadership_assignments::int8)::int8 AS current_committee_leadership_assignments,
            sum(total_days_served_committee_leadership::int8)::int8 AS total_days_served_committee_leadership

        FROM view_riksdagen_politician
        GROUP BY party
        ]]>
    </createView>
    
    
</changeSet>


<changeSet author="pether" id="new_changeset_id_1" failOnError="true">
  <dropView viewName="view_application_action_event_page_annual_summary" />

    <createView viewName="view_application_action_event_page_annual_summary">
        <![CDATA[
        SELECT
            page AS embedded_id_page,
            date_trunc('year', created_date) AS embedded_id_created_date,
            count(*) AS hits,
            percent_rank() OVER (
                PARTITION BY date_trunc('year', created_date)
                ORDER BY count(*) DESC
            ) AS rank_percentage,
            rank() OVER (
                PARTITION BY date_trunc('year', created_date)
                ORDER BY count(*) DESC
            ) AS rank
        FROM application_action_event
        WHERE page IS NOT NULL
        GROUP BY
            page,
            date_trunc('year', created_date)
        -- Optionally remove ORDER BY or keep it if you want a default ordering:
        ORDER BY date_trunc('year', created_date), count(*) DESC
        ]]>
    </createView>
	</changeSet>

<changeSet author="pether" id="new_changeset_id_2" failOnError="true">
 <dropView viewName="view_application_action_event_page_daily_summary" />
    <createView viewName="view_application_action_event_page_daily_summary">
        <![CDATA[
        SELECT
            page AS embedded_id_page,
            date_trunc('day', created_date) AS embedded_id_created_date,
            count(*) AS hits,
            percent_rank() OVER (
                PARTITION BY date_trunc('day', created_date)
                ORDER BY count(*) DESC
            ) AS rank_percentage,
            rank() OVER (
                PARTITION BY date_trunc('day', created_date)
                ORDER BY count(*) DESC
            ) AS rank
        FROM application_action_event
        WHERE page IS NOT NULL
        GROUP BY
            page,
            date_trunc('day', created_date)
        ORDER BY
            date_trunc('day', created_date), count(*) DESC
        ]]>
    </createView>
</changeSet>

<changeSet author="pether" id="new_changeset_id_3" failOnError="true">
    <dropView viewName="view_application_action_event_page_element_annual_summary" />

    <createView viewName="view_application_action_event_page_element_annual_summary">
        <![CDATA[
        SELECT
            page AS embedded_id_page,
            element_id AS embedded_id_element_id,
            date_trunc('year', created_date) AS embedded_id_created_date,
            count(*) AS hits,
            percent_rank() OVER (
                PARTITION BY page, date_trunc('year', created_date)
                ORDER BY count(*) DESC
            ) AS rank_percentage,
            rank() OVER (
                PARTITION BY page, date_trunc('year', created_date)
                ORDER BY count(*) DESC
            ) AS rank
        FROM application_action_event
        WHERE page IS NOT NULL
          AND element_id IS NOT NULL
          AND element_id <> ''
        GROUP BY
            page,
            element_id,
            date_trunc('year', created_date)
        ORDER BY
            date_trunc('year', created_date),
            count(*) DESC
        ]]>
    </createView>
</changeSet>

	
<changeSet author="pether" id="new_changeset_id_4" failOnError="true">
    <dropView viewName="view_application_action_event_page_element_daily_summary" />
    <createView viewName="view_application_action_event_page_element_daily_summary">
        <![CDATA[
        SELECT
            page AS embedded_id_page,
            element_id AS embedded_id_element_id,
            date_trunc('day', created_date) AS embedded_id_created_date,
            count(*) AS hits,
            percent_rank() OVER (
                PARTITION BY page, date_trunc('day', created_date)
                ORDER BY count(*) DESC
            ) AS rank_percentage,
            rank() OVER (
                PARTITION BY page, date_trunc('day', created_date)
                ORDER BY count(*) DESC
            ) AS rank
        FROM application_action_event
        WHERE page IS NOT NULL
          AND element_id IS NOT NULL
          AND element_id <> ''
        GROUP BY
            page,
            element_id,
            date_trunc('day', created_date)
        ORDER BY
            date_trunc('day', created_date),
            count(*) DESC
        ]]>
    </createView>
</changeSet>

	<changeSet author="pether" id="new_changeset_id_5" failOnError="true">
		<createIndex indexName="application_action_event_page_idx" tableName="application_action_event">
			<column name="page"/>
		</createIndex>
		<createIndex indexName="application_action_event_element_id_idx" tableName="application_action_event">
			<column name="element_id"/>
		</createIndex>

	 <createIndex indexName="application_action_event_page_created_date_idx" tableName="application_action_event">
        <column name="page"/>
        <column name="created_date"/>
    </createIndex>

    <createIndex indexName="application_action_event_page_element_id_idx" tableName="application_action_event">
        <column name="page"/>
        <column name="element_id"/>
    </createIndex>
</changeSet>

</databaseChangeLog>
